@using Kapitalist.Data.Models
@using Kapitalist.Data.Models.Consts
@using Kapitalist.Web.Resources
@model Kapitalist.Web.Client.ViewModels.Published.TenderBelowThresholdViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container header-and-body-content">
    <h2>@GlobalRes.EditTender.</h2>

    @using (Html.BeginForm("EditTender", "TenderBelowThreshold", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(m => m.Guid)

        <div class="form-group">
            <label class="col-md-3 control-label">Закупівля</label>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.Identifier, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-3 control-label">@GlobalRes.TitleUk</label>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 control-label">@GlobalRes.Description</label>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 control-label">@GlobalRes.AwardCriteria</label>
            <div class="col-md-9">
                @{
                    var awardCriteriaList = new List<SelectListItem>
                    {
                        new SelectListItem {Text = GlobalRes.MostEconomicallyBetterOffer, Value = AwardCriteria.MOST_ECONOMICALLY_BETTER_OFFER, Selected = Model.AwardCriteria == AwardCriteria.MOST_ECONOMICALLY_BETTER_OFFER},
                        new SelectListItem {Text = GlobalRes.Price, Value = AwardCriteria.LOWEST_COST, Selected = Model.AwardCriteria == AwardCriteria.LOWEST_COST}
                    };
                }
                @Html.DropDownListFor(m => m.AwardCriteria, awardCriteriaList, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.AwardCriteria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            <div class="col-md-3 control-label">
                <h3>@GlobalRes.Procurement</h3>
            </div>
            <div class="clearfix"></div>

            <div class="form-group">
                <label class="col-md-3 control-label">@GlobalRes.Currency</label>
                <div class="col-md-9">
                    @Html.TextBoxFor(m => m.Value.Currency, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Value.Currency, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-3 control-label">@GlobalRes.VATIncluded</label>
                <div class="col-md-9">
                    @Html.CheckBoxFor(m => m.Value.VATIncluded, new { @class = "checkbox-inline" })
                    @Html.ValidationMessageFor(m => m.Value.VATIncluded, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div>
            <div class="col-md-3 control-label">
                <h3>@GlobalRes.Periods</h3>
            </div>
            <div class="clearfix"></div>
            <div class="form-group">
                <label class="col-md-3 control-label">@GlobalRes.Enquery</label>
                <div class="col-md-9">
                    <div> @Html.EditorFor(m => m.EnquiryPeriod.StartDate) - @Html.EditorFor(m => m.EnquiryPeriod.EndDate)</div>
                    <div>
                        @Html.ValidationMessageFor(m => m.EnquiryPeriod.StartDate, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(m => m.EnquiryPeriod.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-3 control-label"> @GlobalRes.Proposition</label>
                <div class="col-md-9">
                    <div>@Html.EditorFor(m => m.TenderPeriod.StartDate) - @Html.EditorFor(m => m.TenderPeriod.EndDate)</div>
                    <div>
                        @Html.ValidationMessageFor(m => m.TenderPeriod.StartDate, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(m => m.TenderPeriod.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-9">
                <a href="@Url.Action("Info", "TenderInfo", new {tenderGuid = Model.Guid})" class="btn btn-default col-xs-12 col-md-3 square-background-yellow btn-lg">@GlobalRes.Cancel</a>
                <input type="submit" value="@GlobalRes.Save" class="btn btn-default col-xs-12 col-md-3 square-background-blue btn-lg" />
            </div>
        </div>
    }
</div>

@section scripts
{

    @Scripts.Render("~/bundles/kendo-period")

    <script>
        var Enquiry_Start = "#@Html.IdFor(m => m.EnquiryPeriod.StartDate)_Local";
        var Enquiry_End = "#@Html.IdFor(m => m.EnquiryPeriod.EndDate)_Local";
        var Tender_Start = "#@Html.IdFor(m => m.TenderPeriod.StartDate)_Local";
        var Tender_End = "#@Html.IdFor(m => m.TenderPeriod.EndDate)_Local";

        $(document)
            .ready(function () {
                maxDate(Enquiry_Start, [Enquiry_End, Tender_Start, Tender_End]);

                minDate(Enquiry_End, [Enquiry_Start]);
                maxDate(Enquiry_End, [Tender_Start, Tender_End]);

                minDate(Tender_Start, [Enquiry_Start, Enquiry_End]);
                maxDate(Tender_Start, [Tender_End]);

                minDate(Tender_End, [Enquiry_Start, Enquiry_End, Tender_Start]);

                $(Enquiry_Start).data("kendoDateTimePicker")
                    .bind('change',
                        function () {
                            debugger;
                            minDate(Enquiry_End, [Enquiry_Start]);
                            minDate(Tender_Start, [Enquiry_Start, Enquiry_End]);
                            minDate(Tender_End, [Enquiry_Start, Enquiry_End, Tender_Start]);
                        });

                $(Enquiry_End).data("kendoDateTimePicker")
                    .bind('change',
                        function () {
                            debugger;
                            maxDate(Enquiry_Start, [Enquiry_End, Tender_Start, Tender_End]);
                            minDate(Tender_Start, [Enquiry_Start, Enquiry_End]);
                            minDate(Tender_End, [Enquiry_Start, Enquiry_End, Tender_Start]);
                        });

                $(Tender_Start).data("kendoDateTimePicker")
                    .bind('change',
                        function () {
                            debugger;
                            maxDate(Enquiry_Start, [Enquiry_End, Tender_Start]);
                            maxDate(Enquiry_End, [Tender_Start, Tender_End]);
                            minDate(Tender_End, [Enquiry_Start, Enquiry_End, Tender_Start]);
                        });

                $(Tender_End).data("kendoDateTimePicker")
                    .bind('change',
                        function () {
                            debugger;
                            maxDate(Enquiry_Start, [Enquiry_End, Tender_Start, Tender_End]);
                            maxDate(Enquiry_End, [Tender_Start, Tender_End]);
                            maxDate(Tender_Start, [Tender_End]);
                        });
            });
    </script>
}